version: '3.8'

services:
  # User Service Application (Production)
  # Uses external PostgreSQL database - no database container needed
  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user-service-prod
    environment:
      NODE_ENV: production
      # External Database - provide these via environment variables or .env file
      DATABASE_URL: ${DATABASE_URL}
      # Server Configuration
      PORT: ${PORT:-4001}
      # Authentication
      SECRET_KEY: ${SECRET_KEY}
      # Email Configuration
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      # CORS Configuration
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "${PORT:-4001}:${PORT:-4001}"
    volumes:
      - uploads_data:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:${PORT:-4001}/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M

volumes:
  uploads_data:
