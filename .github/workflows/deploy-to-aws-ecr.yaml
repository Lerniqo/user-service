name: Build and Push User Service to AWS ECR

on:
  push:
    branches:
      - main  # Trigger on main branch
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install dependencies and build
        run: |
          pnpm install --frozen-lockfile
          pnpm prisma generate
          pnpm run build

      - name: Build Docker image
        run: |
          IMAGE_NAME=webapp-dev-user-service
          IMAGE_TAG=${GITHUB_SHA::8}
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Tag Docker image for ECR
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REGION=us-east-1
          IMAGE_NAME=webapp-dev-user-service
          IMAGE_TAG=${GITHUB_SHA::8}
          docker tag $IMAGE_NAME:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_NAME:latest

      - name: Push Docker image to ECR
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REGION=us-east-1
          IMAGE_NAME=webapp-dev-user-service
          IMAGE_TAG=${GITHUB_SHA::8}
          docker push $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_NAME:latest

      - name: Output image URI
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          REGION=us-east-1
          IMAGE_NAME=webapp-dev-user-service
          IMAGE_TAG=${GITHUB_SHA::8}
          echo "Image URI: $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_NAME:$IMAGE_TAG"
          echo "Latest URI: $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_NAME:latest"
